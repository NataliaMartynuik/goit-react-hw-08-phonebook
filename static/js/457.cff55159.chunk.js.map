{"version":3,"file":"static/js/457.cff55159.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wraper = styled.ul`\n   display: flex;\n   gap: 10px;\n   align-items: center;\n   flex-direction: column;\n   padding: 0;\n   list-style: none;\n   margin-top: 10px;\n\n   \n`\n\nexport const ContactItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 30px;\n    margin-top: 4px;\n    width: 350px;\n    border: 1px solid #1976d2cf;\n    border-radius: 4px;\n    padding-left: 15px;\n`\n\nexport const ContactText = styled.p`\n    font-size: 16px;\n    font-weight: 600;\n\n`\n\nexport const DelButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    background-color: transparent;\n    font-size: 16px;\n    font-weight: 600;\n`\n\nexport const Text = styled.p`\n    font-size: 20px;\n\n`","import { Circles } from 'react-loader-spinner';\n \nexport const Loader = () => {\n        return (\n            <>\n                <Circles\n                    height=\"30\"\n                    width=\"30\"\n                    color=\" #1976d2\"\n                    ariaLabel=\"circles-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"\"\n                    visible={true}\n                    />\n            </>\n        );\n    }","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/Contacts/contactsSlice';\nimport { Wraper, ContactItem, ContactText, DelButton, Text } from './ContactList.styled';\nimport { Loader } from '../Loader/Loader';\nimport { useDeleteContactMutation, useFetchContactsQuery } from 'redux/Contacts/contactsApi';\nimport { FiDelete } from 'react-icons/fi';\nimport { IconContext } from \"react-icons\";\n\nconst ContactList = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilter);\n  const getVisibleContacts = () => {\n     return data.filter(contact =>\n     contact.name.toLowerCase().includes(filter.toLowerCase().trim()))\n  }\n\n  \n\n let visibleContacts = filter === '' ? data : getVisibleContacts();\n\n  return (\n      <>\n        <Wraper>\n        {data &&\n          visibleContacts.map(({ id, name, number, }) => (\n                <ContactItem key={id} >\n                    <ContactText>{name}:</ContactText> {number}\n              <DelButton\n                type=\"button\"\n                onClick={() => deleteContact(id)}>\n                <IconContext.Provider value={{ size: \"20px\", color: \"#1976d2cf\" }}>\n                <FiDelete />\n                </IconContext.Provider>\n              </DelButton>\n               \n                </ContactItem>\n            ))}\n      </Wraper>\n       {data && data.length === 0 && (\n        <Text >No contacts available</Text>)}\n      {isFetching && <Loader />}\n    </>\n    )\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n    border: 1px solid #1976d2;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    padding: 30px;\n\n`\nexport const ContactLabel = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  padding-bottom: 10px;\n  padding-top: 10px;\n  \n`\n\nexport const ContactInput = styled.input`\n    outline: none;\n    border: 1px solid #1976d2;\n    border-radius: 4px;\n    padding: 10px;\n    margin-top: 4px;\n    font-size: 14px;\n    background-color: transparent;\n`\n\nexport const ContactButton = styled.button`\n    cursor: pointer;\n    padding: 6px 22px;\n    font-weight: 500;\n    font-size: 16px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    border-radius: 4px;\n    background-color: rgb(79, 68, 60);\n    color: rgb(244, 234, 225);\n    border: none;\n    height: 30px;\n    margin: 0 auto;\n    width: 150px;\n    margin-top: 20px;\n`\n\nexport const Wrapper = styled.div`\n     padding: 10px;\n \n   @media(min-width: 768px) {\n  margin: 0 auto;\n     padding: 30px;\n   }\n`","import { useState } from 'react';\nimport { ContactForm, ContactLabel, ContactInput, ContactButton, Wrapper } from './ContactForm.styled';\n\nimport { useAddContactMutation, useFetchContactsQuery } from 'redux/Contacts/contactsApi';\n\nimport { ToastContainer, toast } from \"react-toastify\";\n\n\n\n\nexport const Form = () => {\n  const [addContacts] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n  \n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n  const handleSubmit = event => {\n     event.preventDefault();\n     const contact = {\n      name,\n      number,\n\n    }\n\n    if (data.find(contact => contact.name === name)) {\n        toast.info(`${name} is already in contacts.`)\n    } else {\n      addContacts(contact);\n      toast.success(`${name} is added to your phonebooks`) \n      }\n      reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n  return (\n      <Wrapper>\n          <ContactForm onSubmit={handleSubmit}>\n          <ContactLabel>\n            Name\n          </ContactLabel>\n          <ContactInput\n  type=\"text\"\n  name=\"name\"\n  value={name}\n  onChange={e => setName(e.currentTarget.value)}                 \n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required                  \n          />\n       <ContactLabel>\n            Number\n          </ContactLabel>    \n         <ContactInput\n  type=\"tel\"\n  name=\"number\"\n  value={number}\n  onChange={e => setNumber(e.currentTarget.value)}                 \n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n                />\n  <ContactButton type=\"submit\">Add contact</ContactButton>\n  <ToastContainer position=\"top-center\" autoClose={2000} toastify-color-info=\"#a47186\"/>              \n      </ContactForm>  \n      </Wrapper>\n        )\n }\n\nexport default Form;","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-weight: 500;\n  font-size: 16px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nexport const FilterInput = styled.input`\n    height: 30px;\n    outline: none;\n    border: 1px solid #1976d2;\n    border-radius: 4px;\n    padding-left: 15px;\n    margin-top: 4px;\n    font-size: 16px;\n    background-color: transparent;\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/Contacts/contactsSlice';\nimport { filterContacts } from 'redux/Contacts/contactsSlice';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(filterContacts(event.currentTarget.value))\n  }\n  \n\n    return (\n         <FilterLabel> Find contacts by name\n          <FilterInput type=\"text\" value={filter} onChange={changeFilter}></FilterInput>\n        </FilterLabel>\n    )\n}\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 10px;\n \n   @media(min-width: 768px) {\n     display: flex;\n     justify-content: center;\n    padding: 30px;\n    \n  }\n  `\n\nexport const Title = styled.h1`\n    margin-top: 10px;\n    margin-bottom: 20px;\n    font-size: 40px;\n    font-weight: 500;\n    color:  #1976d2;\n\n`\n\n","import ContactList from 'components/ContactList/ContactList';\nimport Form from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { Wrapper, Title} from './Contacts.styled';\nimport { Box } from 'components/Container/Container.styled'\n\nexport default function Contacts() {\n   \n  return (\n    <Box>\n       <Title>Contacts</Title> \n      <Wrapper>\n      <div>\n      <Form />\n     \n     \n      </div>\n        <div>\n         <Filter />  \n        <ContactList />\n      </div>  \n      </Wrapper>\n    </Box>  \n  );\n}"],"names":["Wraper","styled","ContactItem","ContactText","DelButton","Text","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","useFetchContactsQuery","data","isFetching","useDeleteContactMutation","deleteContact","filter","useSelector","getFilter","visibleContacts","contact","name","toLowerCase","includes","trim","map","id","number","type","onClick","value","size","length","ContactForm","ContactLabel","ContactInput","ContactButton","Wrapper","useAddContactMutation","addContacts","useState","setName","setNumber","reset","onSubmit","event","preventDefault","find","toast","onChange","e","currentTarget","pattern","title","required","position","autoClose","FilterLabel","FilterInput","dispatch","useDispatch","filterContacts","Title","Contacts"],"sourceRoot":""}